/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package org.example;

import org.example.cache.PaymentCache;
import org.example.dto.UserDTO;
import org.example.model.Payment;
import org.example.model.Response;

import javax.swing.*;

/**
 *
 * @author maxi
 */
public class EditExpenseJPanel extends javax.swing.JPanel {
    private UserDTO user;
    private JFrame parentFrame;

    /**
     * Creates new form EditPaymentJPanel
     */
    public EditExpenseJPanel(UserDTO user, JFrame parentFrame) {
        initComponents();
        this.user = user;
        this.parentFrame = parentFrame;

        String paymentsText = "Tus pagos: \n\n";
        for (Payment payment : PaymentCache.getInstance(user).getPayments()) {
            if (payment.getPayer().getId() == user.getId()) {
                paymentsText += payment.getId()+" - Pagaste $" + String.format("%.2f", payment.getAmount()) + " a " + payment.getRecipient().getName() + " (ID " + payment.getRecipient().getId() + ") el " + payment.getDate() + "\n";
            } else if (payment.getRecipient().getId() == user.getId()) {
                paymentsText += payment.getId()+" - Recibiste $" + String.format("%.2f", payment.getAmount()) + " de " + payment.getPayer().getName() + " (ID " + payment.getPayer().getId() + ") el " + payment.getDate() + "\n";
            }
        }
        jTextAreaExpenses.setText(paymentsText);
        jTextAreaExpenses.setEditable(false);

        jTextFieldError.setText("");
        jTextFieldError.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelEditExpenseId = new javax.swing.JLabel();
        jTextFieldPaymentId = new javax.swing.JTextField();
        jButtonEdit = new javax.swing.JButton();
        jTextFieldError = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaExpenses = new javax.swing.JTextArea();

        jLabelEditExpenseId.setText("Editar gasto ID: ");

        jTextFieldPaymentId.setColumns(3);

        jButtonEdit.setText("Editar");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        jTextFieldError.setColumns(30);
        jTextFieldError.setText("jTextFieldError");

        jScrollPane1.setMinimumSize(new java.awt.Dimension(900, 400));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(900, 400));

        jTextAreaExpenses.setColumns(40);
        jTextAreaExpenses.setRows(100);
        jTextAreaExpenses.setMinimumSize(new java.awt.Dimension(430, 430));
        jScrollPane1.setViewportView(jTextAreaExpenses);

        jScrollPane2.setViewportView(jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabelEditExpenseId)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldPaymentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldError, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelEditExpenseId)
                    .addComponent(jTextFieldPaymentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonEdit)
                        .addComponent(jTextFieldError, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        // TODO add your handling code here:
        //Selecciona el PAyment con ese ID y abre el EditPaymentJFrame correspondiente. Se debe bloquear que trate de editar un pago en el que no participa.
        int paymentId;
        try {
            paymentId = Integer.parseInt(jTextFieldPaymentId.getText());
            Response paymentResponse = PaymentCache.getInstance(user).getPaymentById(paymentId);
            if (!paymentResponse.isSuccess()) {
                jTextFieldError.setEditable(true);
                jTextFieldError.setText("El ID del pago debe ser un número válido.");
                jTextFieldError.setEditable(false);

                return; // Si no se encuentra el pago, no hacemos nada
            }
            Payment payment = (Payment) paymentResponse.getObj();
            if (payment.getPayer().getId() != user.getId() && payment.getRecipient().getId() != user.getId()) {
                jTextFieldError.setEditable(true);
                jTextFieldError.setText("No puedes editar un pago en el que no participas.");
                jTextFieldError.setEditable(false);

                return; // Si el usuario no es ni el pagador ni el receptor, no hacemos nada
            }
            EditPaymentJFrame editPaymentFrame = new EditPaymentJFrame(user,payment);
            editPaymentFrame.setVisible(true);
            parentFrame.dispose();

        } catch (NumberFormatException e) {
            jTextFieldError.setEditable(true);
            jTextFieldError.setText("El ID del pago debe ser un número válido.");
            jTextFieldError.setEditable(false);

        }
    }//GEN-LAST:event_jButtonEditActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JLabel jLabelEditExpenseId;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaExpenses;
    private javax.swing.JTextField jTextFieldError;
    private javax.swing.JTextField jTextFieldPaymentId;
    // End of variables declaration//GEN-END:variables
}
